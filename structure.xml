<?xml version="1.0" encoding="UTF-8" standalone="no"?><Packages><Package depth="../../../" display="com.apama.adbc" name="com.apama.adbc"><Type category="Event" name="CommandAck"><Description><![CDATA[The acknowledgement event for Command.]]></Description><Summary><![CDATA[The acknowledgement event for Command.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="messageId" type="integer"><Description><![CDATA[Unique request-response matching number.]]></Description><Summary><![CDATA[Unique request-response matching number.]]></Summary><TypeParameters/></Member><Member name="errorMessage" type="string"><Description><![CDATA[Populated with an errorMessage if there is one.]]></Description><Summary><![CDATA[Populated with an errorMessage if there is one.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="QueryDone"><Description><![CDATA[Query is done.  errorMessage is NULL if the query has succeeded, not NULL if an error has occurred.

 See also: StartQuery()

 Dataplayer: <br> - Direction: Correlator to client

 Channel: <verbatim><</verbatim>serviceId<verbatim>></verbatim>.Control]]></Description><Summary><![CDATA[Query is done.  errorMessage is NULL if the query has succeeded, not NULL if an error has occurred.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="messageId" type="integer"><Description><![CDATA[Unique id for this query.]]></Description><Summary><![CDATA[Unique id for this query.]]></Summary><TypeParameters/></Member><Member name="errorMessage" type="string"><Description><![CDATA[Blank on success, otherwise the error message.]]></Description><Summary><![CDATA[Blank on success, otherwise the error message.]]></Summary><TypeParameters/></Member><Member name="eventCount" type="integer"><Description><![CDATA[Total number of events sent.]]></Description><Summary><![CDATA[Total number of events sent.]]></Summary><TypeParameters/></Member><Member name="lastEventTime" type="float"><Description><![CDATA[Timestamp of last event.]]></Description><Summary><![CDATA[Timestamp of last event.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="ResultSchema"><Description><![CDATA[Event in response to the StartQuery event to indicate the result's schema.

 Note: This event will be sent before the first ResultEvent and only if ReturnType is set to ResultEvent.

 See also: StartQuery()

 Dataplayer: <br> - Direction: Correlator to client

 Channel: <verbatim><</verbatim>serviceId<verbatim>></verbatim>.Control]]></Description><Summary><![CDATA[Event in response to the StartQuery event to indicate the result's schema.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="messageId" type="integer"><Description><![CDATA[Unique id for this query.]]></Description><Summary><![CDATA[Unique id for this query.]]></Summary><TypeParameters/></Member><Member name="fieldOrder" type="sequence"><Parameters><Parameter type="string"/></Parameters><Description><![CDATA[The order of the fields in the schema.]]></Description><Summary><![CDATA[The order of the fields in the schema.]]></Summary><TypeParameters/></Member><Member name="fieldTypes" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="string"/></Parameters><Description><![CDATA[The types of the fields in the schema.]]></Description><Summary><![CDATA[The types of the fields in the schema.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Command"><Description><![CDATA[Sent to plugin to perform maintenance operations such as update or delete.

 Response event: CommandAck; errorMessage is blank on success, or otherwise a description of the error]]></Description><Summary><![CDATA[Sent to plugin to perform maintenance operations such as update or delete.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="messageId" type="integer"><Description><![CDATA[Unique request-response matching number.]]></Description><Summary><![CDATA[Unique request-response matching number.]]></Summary><TypeParameters/></Member><Member name="operationString" type="string"><Description><![CDATA[Command string (Update, delete, etc.).]]></Description><Summary><![CDATA[Command string (Update, delete, etc.).]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="ResultEvent"><Description><![CDATA[Response to the StartQuery

 These will be sent in order until the number requested, in the rowLimit specified, in the StartQuery has been sent.

 All results will be streamed at once.

 See also: StartQuery()

 Dataplayer: <br> - Direction: Correlator to client]]></Description><Summary><![CDATA[Response to the StartQuery]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="messageId" type="integer"><Description><![CDATA[Unique id for this query.]]></Description><Summary><![CDATA[Unique id for this query.]]></Summary><TypeParameters/></Member><Member name="rowId" type="integer"><Description><![CDATA[unique Id for each row This is useful if you ned to rerun a query and dont expect the underlying data to change.]]></Description><Summary><![CDATA[unique Id for each row This is useful if you ned to rerun a query and dont expect the underlying data to change.]]></Summary><TypeParameters/></Member><Member name="row" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[The result data.]]></Description><Summary><![CDATA[The result data.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Statement"><Description><![CDATA[Execute an SQL statement]]></Description><Summary><![CDATA[Execute an SQL statement]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="messageId" type="integer"><Description><![CDATA[Unique id identifying this Statement]]></Description><Summary><![CDATA[Unique id identifying this Statement]]></Summary><TypeParameters/></Member><Member name="sql" type="string"><Description><![CDATA[SQL to run]]></Description><Summary><![CDATA[SQL to run]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="StatementDone"><Description><![CDATA[Response to Statement]]></Description><Summary><![CDATA[Response to Statement]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="messageId" type="integer"><Description><![CDATA[Unique id identifying the Statement that this is in response to]]></Description><Summary><![CDATA[Unique id identifying the Statement that this is in response to]]></Summary><TypeParameters/></Member><Member name="updateCount" type="integer"><Description><![CDATA[Number of rows updated by the Statement]]></Description><Summary><![CDATA[Number of rows updated by the Statement]]></Summary><TypeParameters/></Member><Member name="error" type="optional"><Parameters><Parameter type="string"/></Parameters><TypeParameters/></Member></Type><Type category="Event" name="Store"><Description><![CDATA[A specialised simpler kind of command that just populates a new row with values]]></Description><Summary><![CDATA[A specialised simpler kind of command that just populates a new row with values]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="messageId" type="integer"><TypeParameters/></Member><Member name="tableName" type="string"><TypeParameters/></Member><Member name="row" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><TypeParameters/></Member></Type><Type category="Event" name="ResultSetRow"><Description><![CDATA[Individual row from a ResultSet. Zero or more are sent in response to a Statement.]]></Description><Summary><![CDATA[Individual row from a ResultSet. Zero or more are sent in response to a Statement.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="messageId" type="integer"><Description><![CDATA[Unique id identifying the Statement that this is in response to]]></Description><Summary><![CDATA[Unique id identifying the Statement that this is in response to]]></Summary><TypeParameters/></Member><Member name="rowId" type="integer"><Description><![CDATA[unique Id for each row This is useful if you ned to rerun a query and dont expect the underlying data to change.]]></Description><Summary><![CDATA[unique Id for each row This is useful if you ned to rerun a query and dont expect the underlying data to change.]]></Summary><TypeParameters/></Member><Member name="row" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[The result data.]]></Description><Summary><![CDATA[The result data.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="StartQuery"><Description><![CDATA[Sent to plugin to start a database query.

 See also: QueryStatus(), ResultSchema(), ResultEvent()

 Response: QueryStatus(), ResultSchema(), ResultEvent()

 Dataplayer: <br> - Direction: Client to correlator.]]></Description><Summary><![CDATA[Sent to plugin to start a database query.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="messageId" type="integer"><Description><![CDATA[Unique id for this query.]]></Description><Summary><![CDATA[Unique id for this query.]]></Summary><TypeParameters/></Member><Member name="query" type="string"><Description><![CDATA[Query to run (either query string or name).]]></Description><Summary><![CDATA[Query to run (either query string or name).]]></Summary><TypeParameters/></Member></Type></Package></Packages>