using com.apama.adbc.Statement;
using com.apama.adbc.SmallStatement;
using com.apama.adbc.ResultSetRow;
using com.apama.adbc.SmallResultsSet;
using com.apama.adbc.StatementDone;

monitor Test {
	action onload() {
		Statement stmt := new Statement;

		stmt.messageId := 1;
		stmt.sql := "CREATE TABLE myTable(myColumn int);";
		send stmt to "JDBC";

		stmt.messageId := 2;
		stmt.sql := "INSERT INTO myTable VALUES(42);";
		send stmt to "JDBC";

		stmt.messageId := 3;
		stmt.sql := "INSERT INTO myTable VALUES(100);";
		send stmt to "JDBC";

		stmt.messageId := 4;
		stmt.sql := "INSERT INTO myTable VALUES(-1);";
		send stmt to "JDBC";

		log "Do SmallQuery" at INFO;
		stmt.messageId := 5;
		stmt.sql := "SELECT * FROM myTable WHERE myColumn > 0;";
		
		SmallStatement smallStmt := new SmallStatement;
		smallStmt.statement := stmt;
		smallStmt.maxSmallQuerySize := 10;
		send smallStmt to "JDBC";

		on all ResultSetRow(messageId=5) as row {
			log "Should not receive individual Result Rows";
			log row.toString() at INFO;
		}

		on all SmallResultsSet(messageId=5) as srs{
			log "Received Small Result set - should only see this once for this test" at INFO;
			//parse all rows received
			//integer i := 0;
			dictionary <string, any> row;
			for row in srs.rows{
				log row.toString() at INFO;
			}
		}
		
		on all StatementDone() as sd {
			//if sd.error.
			log "Statement Done received " + sd.toString();
		}
	}
}
